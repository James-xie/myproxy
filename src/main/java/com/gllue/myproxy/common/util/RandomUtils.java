package com.gllue.myproxy.common.util;

import java.util.UUID;
import java.util.concurrent.ThreadLocalRandom;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public final class RandomUtils {
  private static final byte[] SEED = {
      'a', 'b', 'e', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', };

  /**
   * Generate random bytes.
   *
   * @param length length for generated bytes.
   * @return generated bytes
   */
  public static byte[] generateRandomBytes(final int length) {
    byte[] result = new byte[length];
    var random = ThreadLocalRandom.current();
    for (int i = 0; i < length; i++) {
      result[i] = SEED[random.nextInt(SEED.length)];
    }
    return result;
  }

  public static String randomUUID() {
    return UUID.randomUUID().toString().toUpperCase();
  }

  public static String randomShortUUID() {
    return new String(generateRandomBytes(16));
  }
}
